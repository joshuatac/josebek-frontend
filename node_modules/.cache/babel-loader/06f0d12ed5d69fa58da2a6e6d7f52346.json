{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { cartConstants } from './constant';\nimport store from '../store';\nexport var addToCart = function addToCart(product) {\n  var qty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var cartItems, qty;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cartItems = store.getState().cart.cartItems; // console.log('action::products', products);\n\n              qty = cartItems[product._id] ? parseInt(cartItems[product._id].qty + new qty()) : 1;\n              cartItems[product._id] = _objectSpread({}, product, {\n                qty: qty\n              });\n              localStorage.setItem('cart', JSON.stringify(cartItems));\n              dispatch({\n                type: cartConstants.ADD_TO_CART_REQUEST,\n                payload: {\n                  cartItems: cartItems\n                }\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var updateCart = function updateCart() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var cartItems;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              cartItems = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : null;\n\n              if (cartItems) {\n                dispatch({\n                  type: cartConstants.ADD_TO_CART_REQUEST,\n                  payload: {\n                    cartItems: cartItems\n                  }\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/development/Desktop/josebek store/frontend-app/src/actions/cart.action.js"],"names":["cartConstants","store","addToCart","product","qty","dispatch","cartItems","getState","cart","_id","parseInt","localStorage","setItem","JSON","stringify","type","ADD_TO_CART_REQUEST","payload","updateCart","getItem","parse"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,YAA9B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAuB;AAAA,MAAbC,GAAa,uEAAT,IAAS;AAC/C;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,SADF,GACgBL,KAAK,CAACM,QAAN,GAAiBC,IADjC,CACEF,SADF,EAEN;;AAEMF,cAAAA,GAJA,GAIME,SAAS,CAACH,OAAO,CAACM,GAAT,CAAT,GACTC,QAAQ,CAACJ,SAAS,CAACH,OAAO,CAACM,GAAT,CAAT,CAAuBL,GAAvB,GAA4B,IAAIA,GAAJ,EAA7B,CADC,GAET,CANG;AAONE,cAAAA,SAAS,CAACH,OAAO,CAACM,GAAT,CAAT,qBACIN,OADJ;AAECC,gBAAAA,GAAG,EAAHA;AAFD;AAKAO,cAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeR,SAAf,CAA7B;AACAD,cAAAA,QAAQ,CAAC;AACRU,gBAAAA,IAAI,EAAEf,aAAa,CAACgB,mBADZ;AAERC,gBAAAA,OAAO,EAAE;AAAEX,kBAAAA,SAAS,EAATA;AAAF;AAFD,eAAD,CAAR;;AAbM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAkBA,CAnBM;AAsBP,OAAO,IAAMY,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC/B;AAAA,yEAAO,kBAAOb,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,cAAAA,SADA,GACYK,YAAY,CAACQ,OAAb,CAAqB,MAArB,IACfN,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACQ,OAAb,CAAqB,MAArB,CAAX,CADe,GAEf,IAHG;;AAKN,kBAAIb,SAAJ,EAAe;AACdD,gBAAAA,QAAQ,CAAC;AACRU,kBAAAA,IAAI,EAAEf,aAAa,CAACgB,mBADZ;AAERC,kBAAAA,OAAO,EAAE;AAAEX,oBAAAA,SAAS,EAATA;AAAF;AAFD,iBAAD,CAAR;AAIA;;AAVK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAYA,CAbM","sourcesContent":["import { cartConstants } from './constant';\r\nimport store from '../store';\r\n\r\nexport const addToCart = (product, qty=null) => {\r\n\treturn async (dispatch) => {\r\n\t\tconst { cartItems } = store.getState().cart;\r\n\t\t// console.log('action::products', products);\r\n\r\n\t\tconst qty = cartItems[product._id]\r\n\t\t\t? parseInt(cartItems[product._id].qty +new qty)\r\n\t\t\t: 1;\r\n\t\tcartItems[product._id] = {\r\n\t\t\t...product,\r\n\t\t\tqty,\r\n\t\t};\r\n\r\n\t\tlocalStorage.setItem('cart', JSON.stringify(cartItems));\r\n\t\tdispatch({\r\n\t\t\ttype: cartConstants.ADD_TO_CART_REQUEST,\r\n\t\t\tpayload: { cartItems },\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const updateCart = () => {\r\n\treturn async (dispatch) => {\r\n\t\tconst cartItems = localStorage.getItem('cart')\r\n\t\t\t? JSON.parse(localStorage.getItem('cart'))\r\n\t\t\t: null;\r\n\r\n\t\tif (cartItems) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: cartConstants.ADD_TO_CART_REQUEST,\r\n\t\t\t\tpayload: { cartItems },\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};"]},"metadata":{},"sourceType":"module"}