{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { userConstants, cartConstants } from './constant';\nimport axios from '../helpers/axios';\nexport var getAddress = function getAddress() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, address, error;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post(\"/user/getaddress\");\n\n            case 3:\n              res = _context.sent;\n              dispatch({\n                type: userConstants.GET_USER_ADDRESS_REQUEST\n              });\n\n              if (res.status === 200) {\n                address = res.data.userAddress.address;\n                dispatch({\n                  type: userConstants.GET_USER_ADDRESS_SUCCESS,\n                  payload: {\n                    address: address\n                  }\n                });\n              } else {\n                error = res.data.error;\n                dispatch({\n                  type: userConstants.GET_USER_ADDRESS_FAILURE,\n                  payload: {\n                    error: error\n                  }\n                });\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var addAddress = function addAddress(payload) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res, address, error;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post(\"/user/address/create\", {\n                payload: payload\n              });\n\n            case 3:\n              res = _context2.sent;\n              dispatch({\n                type: userConstants.ADD_USER_ADDRESS_REQUEST\n              });\n\n              if (res.status === 201) {\n                console.log(res);\n                address = res.data.address.address;\n                dispatch({\n                  type: userConstants.ADD_USER_ADDRESS_SUCCESS,\n                  payload: {\n                    address: address\n                  }\n                });\n              } else {\n                error = res.data.error;\n                dispatch({\n                  type: userConstants.ADD_USER_ADDRESS_FAILURE,\n                  payload: {\n                    error: error\n                  }\n                });\n              }\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var addOrder = function addOrder(payload) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res, order, error;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.post(\"/addOrder\", payload);\n\n            case 3:\n              res = _context3.sent;\n              dispatch({\n                type: userConstants.ADD_USER_ORDER_REQUEST\n              });\n\n              if (res.status === 201) {\n                console.log(res);\n                order = res.data.order;\n                dispatch({\n                  type: cartConstants.RESET_CART\n                });\n                dispatch({\n                  type: userConstants.ADD_USER_ORDER_SUCCESS,\n                  payload: {\n                    order: order\n                  }\n                }); // const {\n                //   address: { address },\n                // } = res.data;\n                // dispatch({\n                //   type: userConstants.ADD_USER_ADDRESS_SUCCESS,\n                //   payload: { address },\n                // });\n              } else {\n                error = res.data.error;\n                dispatch({\n                  type: userConstants.ADD_USER_ORDER_FAILURE,\n                  payload: {\n                    error: error\n                  }\n                });\n              }\n\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var getOrders = function getOrders() {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var res, orders, error;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.get(\"/getOrders\");\n\n            case 3:\n              res = _context4.sent;\n              dispatch({\n                type: userConstants.GET_USER_ORDER_REQUEST\n              });\n\n              if (res.status === 200) {\n                console.log(res);\n                orders = res.data.orders;\n                dispatch({\n                  type: userConstants.GET_USER_ORDER_SUCCESS,\n                  payload: {\n                    orders: orders\n                  }\n                });\n              } else {\n                error = res.data.error;\n                dispatch({\n                  type: userConstants.GET_USER_ORDER_FAILURE,\n                  payload: {\n                    error: error\n                  }\n                });\n              }\n\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n}; // single order with complete info and delivery location\n\nexport var getOrder = function getOrder(payload) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      var res, order, error;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return axios.post(\"/getOrder\", payload);\n\n            case 3:\n              res = _context5.sent;\n              dispatch({\n                type: userConstants.GET_USER_ORDER_DETAILS_REQUEST\n              });\n\n              if (res.status === 200) {\n                console.log(res);\n                order = res.data.order;\n                dispatch({\n                  type: userConstants.GET_USER_ORDER_DETAILS_SUCCESS,\n                  payload: {\n                    order: order\n                  }\n                });\n              } else {\n                error = res.data.error;\n                dispatch({\n                  type: userConstants.GET_USER_ORDER_DETAILS_FAILURE,\n                  payload: {\n                    error: error\n                  }\n                });\n              }\n\n              _context5.next = 11;\n              break;\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 8]]);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/development/Desktop/josebek store/frontend-app/src/actions/user.action.js"],"names":["userConstants","cartConstants","axios","getAddress","dispatch","post","res","type","GET_USER_ADDRESS_REQUEST","status","address","data","userAddress","GET_USER_ADDRESS_SUCCESS","payload","error","GET_USER_ADDRESS_FAILURE","console","log","addAddress","ADD_USER_ADDRESS_REQUEST","ADD_USER_ADDRESS_SUCCESS","ADD_USER_ADDRESS_FAILURE","addOrder","ADD_USER_ORDER_REQUEST","order","RESET_CART","ADD_USER_ORDER_SUCCESS","ADD_USER_ORDER_FAILURE","getOrders","get","GET_USER_ORDER_REQUEST","orders","GET_USER_ORDER_SUCCESS","GET_USER_ORDER_FAILURE","getOrder","GET_USER_ORDER_DETAILS_REQUEST","GET_USER_ORDER_DETAILS_SUCCESS","GET_USER_ORDER_DETAILS_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants, cartConstants } from './constant';\r\nimport axios from '../helpers/axios';\r\n\r\nexport const getAddress = () => {\r\n\treturn async (dispatch) => {\r\n\t  try {\r\n\t\tconst res = await axios.post(`/user/getaddress`);\r\n\t\tdispatch({ type: userConstants.GET_USER_ADDRESS_REQUEST });\r\n\t\tif (res.status === 200) {\r\n\t\t  const {\r\n\t\t\tuserAddress: { address },\r\n\t\t  } = res.data;\r\n\t\t  dispatch({\r\n\t\t\ttype: userConstants.GET_USER_ADDRESS_SUCCESS,\r\n\t\t\tpayload: { address },\r\n\t\t  });\r\n\t\t} else {\r\n\t\t  const { error } = res.data;\r\n\t\t  dispatch({\r\n\t\t\ttype: userConstants.GET_USER_ADDRESS_FAILURE,\r\n\t\t\tpayload: { error },\r\n\t\t  });\r\n\t\t}\r\n\t  } catch (error) {\r\n\t\tconsole.log(error);\r\n\t  }\r\n\t};\r\n  };\r\n  \r\n  export const addAddress = (payload) => {\r\n\treturn async (dispatch) => {\r\n\t  try {\r\n\t\tconst res = await axios.post(`/user/address/create`, { payload });\r\n\t\tdispatch({ type: userConstants.ADD_USER_ADDRESS_REQUEST });\r\n\t\tif (res.status === 201) {\r\n\t\t  console.log(res);\r\n\t\t  const {\r\n\t\t\taddress: { address },\r\n\t\t  } = res.data;\r\n\t\t  dispatch({\r\n\t\t\ttype: userConstants.ADD_USER_ADDRESS_SUCCESS,\r\n\t\t\tpayload: { address },\r\n\t\t  });\r\n\t\t} else {\r\n\t\t  const { error } = res.data;\r\n\t\t  dispatch({\r\n\t\t\ttype: userConstants.ADD_USER_ADDRESS_FAILURE,\r\n\t\t\tpayload: { error },\r\n\t\t  });\r\n\t\t}\r\n\t  } catch (error) {\r\n\t\tconsole.log(error);\r\n\t  }\r\n\t};\r\n  };\r\n  \r\n  export const addOrder = (payload) => {\r\n\treturn async (dispatch) => {\r\n\t  try {\r\n\t\tconst res = await axios.post(`/addOrder`, payload);\r\n\t\tdispatch({ type: userConstants.ADD_USER_ORDER_REQUEST });\r\n\t\tif (res.status === 201) {\r\n\t\t  console.log(res);\r\n\t\t  const { order } = res.data;\r\n\t\t  dispatch({\r\n\t\t\ttype: cartConstants.RESET_CART,\r\n\t\t  });\r\n\t\t  dispatch({\r\n\t\t\ttype: userConstants.ADD_USER_ORDER_SUCCESS,\r\n\t\t\tpayload: { order },\r\n\t\t  });\r\n\t\t  // const {\r\n\t\t  //   address: { address },\r\n\t\t  // } = res.data;\r\n\t\t  // dispatch({\r\n\t\t  //   type: userConstants.ADD_USER_ADDRESS_SUCCESS,\r\n\t\t  //   payload: { address },\r\n\t\t  // });\r\n\t\t} else {\r\n\t\t  const { error } = res.data;\r\n\t\t  dispatch({\r\n\t\t\ttype: userConstants.ADD_USER_ORDER_FAILURE,\r\n\t\t\tpayload: { error },\r\n\t\t  });\r\n\t\t}\r\n\t  } catch (error) {\r\n\t\tconsole.log(error);\r\n\t  }\r\n\t};\r\n  };\r\n  \r\n  export const getOrders = () => {\r\n\treturn async (dispatch) => {\r\n\t  try {\r\n\t\tconst res = await axios.get(`/getOrders`);\r\n\t\tdispatch({ type: userConstants.GET_USER_ORDER_REQUEST });\r\n\t\tif (res.status === 200) {\r\n\t\t  console.log(res);\r\n\t\t  const { orders } = res.data;\r\n\t\t  dispatch({\r\n\t\t\ttype: userConstants.GET_USER_ORDER_SUCCESS,\r\n\t\t\tpayload: { orders },\r\n\t\t  });\r\n\t\t} else {\r\n\t\t  const { error } = res.data;\r\n\t\t  dispatch({\r\n\t\t\ttype: userConstants.GET_USER_ORDER_FAILURE,\r\n\t\t\tpayload: { error },\r\n\t\t  });\r\n\t\t}\r\n\t  } catch (error) {\r\n\t\tconsole.log(error);\r\n\t  }\r\n\t};\r\n  };\r\n  \r\n  // single order with complete info and delivery location\r\n  export const getOrder = (payload) => {\r\n\treturn async (dispatch) => {\r\n\t  try {\r\n\t\tconst res = await axios.post(`/getOrder`, payload);\r\n\t\tdispatch({ type: userConstants.GET_USER_ORDER_DETAILS_REQUEST });\r\n\t\tif (res.status === 200) {\r\n\t\t  console.log(res);\r\n\t\t  const { order } = res.data;\r\n\t\t  dispatch({\r\n\t\t\ttype: userConstants.GET_USER_ORDER_DETAILS_SUCCESS,\r\n\t\t\tpayload: { order },\r\n\t\t  });\r\n\t\t} else {\r\n\t\t  const { error } = res.data;\r\n\t\t  dispatch({\r\n\t\t\ttype: userConstants.GET_USER_ORDER_DETAILS_FAILURE,\r\n\t\t\tpayload: { error },\r\n\t\t  });\r\n\t\t}\r\n\t  } catch (error) {\r\n\t\tconsole.log(error);\r\n\t  }\r\n\t};\r\n  };"]},"metadata":{},"sourceType":"module"}