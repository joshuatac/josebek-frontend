{"ast":null,"code":"import { categoryConstants } from '../actions/constant';\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewCategories = (parentId, categories, category) => {\n  let myCategories = [];\n\n  if (parentId == undefined) {\n    return [...categories, {\n      _id: category._id,\n      name: category.name,\n      slug: category.slug,\n      parentId: category.parentId,\n      children: []\n    }];\n  }\n\n  for (let cat of categories) {\n    if (cat._id == parentId) {\n      myCategories.push({ ...cat,\n        children: cat.children ? buildNewCategories(parentId, [...cat.children, {\n          _id: category._id,\n          name: category.name,\n          slug: category.slug,\n          parentId: category.parentId,\n          children: category.children\n        }], category) : []\n      });\n    } else {\n      myCategories.push({ ...cat,\n        children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\n      });\n    }\n  }\n\n  return myCategories;\n};\n\nexport default ((state = initState, action) => {\n  switch (action.type) {\n    case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\n      state = { ...state,\n        categories: action.payload.categories\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORIES_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORIES_SUCCESS:\n      const category = action.payload.category;\n      const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n      console.log('updated categories', updatedCategories);\n      state = { ...state,\n        categories: updatedCategories,\n        loading: false\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORIES_SUCCESS:\n      state = { ...initState\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["C:/Users/development/Desktop/josebek store/frontend-app/src/reducers/category.reducer.js"],"names":["categoryConstants","initState","categories","loading","error","buildNewCategories","parentId","category","myCategories","undefined","_id","name","slug","children","cat","push","state","action","type","GET_ALL_CATEGORIES_SUCCESS","payload","ADD_NEW_CATEGORIES_REQUEST","ADD_NEW_CATEGORIES_SUCCESS","updatedCategories","console","log"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AAEA,MAAMC,SAAS,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAAlB;;AAMA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWJ,UAAX,EAAuBK,QAAvB,KAAoC;AAC9D,MAAIC,YAAY,GAAG,EAAnB;;AACA,MAAIF,QAAQ,IAAIG,SAAhB,EAA2B;AAC1B,WAAO,CACN,GAAGP,UADG,EAEN;AACCQ,MAAAA,GAAG,EAAEH,QAAQ,CAACG,GADf;AAECC,MAAAA,IAAI,EAAEJ,QAAQ,CAACI,IAFhB;AAGCC,MAAAA,IAAI,EAAEL,QAAQ,CAACK,IAHhB;AAICN,MAAAA,QAAQ,EAAEC,QAAQ,CAACD,QAJpB;AAKCO,MAAAA,QAAQ,EAAE;AALX,KAFM,CAAP;AAUA;;AACD,OAAK,IAAIC,GAAT,IAAgBZ,UAAhB,EAA4B;AAC3B,QAAIY,GAAG,CAACJ,GAAJ,IAAWJ,QAAf,EAAyB;AACxBE,MAAAA,YAAY,CAACO,IAAb,CAAkB,EACjB,GAAGD,GADc;AAEjBD,QAAAA,QAAQ,EAAEC,GAAG,CAACD,QAAJ,GACPR,kBAAkB,CAClBC,QADkB,EAElB,CACC,GAAGQ,GAAG,CAACD,QADR,EAEC;AACCH,UAAAA,GAAG,EAAEH,QAAQ,CAACG,GADf;AAECC,UAAAA,IAAI,EAAEJ,QAAQ,CAACI,IAFhB;AAGCC,UAAAA,IAAI,EAAEL,QAAQ,CAACK,IAHhB;AAICN,UAAAA,QAAQ,EAAEC,QAAQ,CAACD,QAJpB;AAKCO,UAAAA,QAAQ,EAAEN,QAAQ,CAACM;AALpB,SAFD,CAFkB,EAYlBN,QAZkB,CADX,GAeP;AAjBc,OAAlB;AAmBA,KApBD,MAoBO;AACNC,MAAAA,YAAY,CAACO,IAAb,CAAkB,EACjB,GAAGD,GADc;AAEjBD,QAAAA,QAAQ,EAAEC,GAAG,CAACD,QAAJ,GACPR,kBAAkB,CAACC,QAAD,EAAWQ,GAAG,CAACD,QAAf,EAAyBN,QAAzB,CADX,GAEP;AAJc,OAAlB;AAMA;AACD;;AACD,SAAOC,YAAP;AACA,CA7CD;;AA+CA,gBAAe,CAACQ,KAAK,GAAGf,SAAT,EAAoBgB,MAApB,KAA+B;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKlB,iBAAiB,CAACmB,0BAAvB;AACCH,MAAAA,KAAK,GAAG,EACP,GAAGA,KADI;AAEPd,QAAAA,UAAU,EAAEe,MAAM,CAACG,OAAP,CAAelB;AAFpB,OAAR;AAIA;;AAED,SAAKF,iBAAiB,CAACqB,0BAAvB;AACCL,MAAAA,KAAK,GAAG,EACP,GAAGA,KADI;AAEPb,QAAAA,OAAO,EAAE;AAFF,OAAR;AAIA;;AAED,SAAKH,iBAAiB,CAACsB,0BAAvB;AACC,YAAMf,QAAQ,GAAGU,MAAM,CAACG,OAAP,CAAeb,QAAhC;AACA,YAAMgB,iBAAiB,GAAGlB,kBAAkB,CAC3CE,QAAQ,CAACD,QADkC,EAE3CU,KAAK,CAACd,UAFqC,EAG3CK,QAH2C,CAA5C;AAKAiB,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,iBAAlC;AACAP,MAAAA,KAAK,GAAG,EACP,GAAGA,KADI;AAEPd,QAAAA,UAAU,EAAEqB,iBAFL;AAGPpB,QAAAA,OAAO,EAAE;AAHF,OAAR;AAKA;;AAED,SAAKH,iBAAiB,CAACsB,0BAAvB;AACCN,MAAAA,KAAK,GAAG,EACP,GAAGf;AADI,OAAR;AAGA;AAlCF;;AAqCA,SAAOe,KAAP;AACA,CAvCD","sourcesContent":["import { categoryConstants } from '../actions/constant';\r\n\r\nconst initState = {\r\n\tcategories: [],\r\n\tloading: false,\r\n\terror: null,\r\n};\r\n\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n\tlet myCategories = [];\r\n\tif (parentId == undefined) {\r\n\t\treturn [\r\n\t\t\t...categories,\r\n\t\t\t{\r\n\t\t\t\t_id: category._id,\r\n\t\t\t\tname: category.name,\r\n\t\t\t\tslug: category.slug,\r\n\t\t\t\tparentId: category.parentId,\r\n\t\t\t\tchildren: [],\r\n\t\t\t},\r\n\t\t];\r\n\t}\r\n\tfor (let cat of categories) {\r\n\t\tif (cat._id == parentId) {\r\n\t\t\tmyCategories.push({\r\n\t\t\t\t...cat,\r\n\t\t\t\tchildren: cat.children\r\n\t\t\t\t\t? buildNewCategories(\r\n\t\t\t\t\t\t\tparentId,\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t...cat.children,\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t_id: category._id,\r\n\t\t\t\t\t\t\t\t\tname: category.name,\r\n\t\t\t\t\t\t\t\t\tslug: category.slug,\r\n\t\t\t\t\t\t\t\t\tparentId: category.parentId,\r\n\t\t\t\t\t\t\t\t\tchildren: category.children,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tcategory,\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t: [],\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tmyCategories.push({\r\n\t\t\t\t...cat,\r\n\t\t\t\tchildren: cat.children\r\n\t\t\t\t\t? buildNewCategories(parentId, cat.children, category)\r\n\t\t\t\t\t: [],\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn myCategories;\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: action.payload.categories,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\r\n\t\tcase categoryConstants.ADD_NEW_CATEGORIES_REQUEST:\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\r\n\t\tcase categoryConstants.ADD_NEW_CATEGORIES_SUCCESS:\r\n\t\t\tconst category = action.payload.category;\r\n\t\t\tconst updatedCategories = buildNewCategories(\r\n\t\t\t\tcategory.parentId,\r\n\t\t\t\tstate.categories,\r\n\t\t\t\tcategory,\r\n\t\t\t);\r\n\t\t\tconsole.log('updated categories', updatedCategories);\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: updatedCategories,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\r\n\t\tcase categoryConstants.ADD_NEW_CATEGORIES_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...initState,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn state;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}