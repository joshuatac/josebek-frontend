{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"../helpers/axios\";\nimport { cartConstants } from \"./constant\";\nimport store from \"../store\";\n\nvar getCartItems = function getCartItems() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, cartItems;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: cartConstants.ADD_TO_CART_REQUEST\n              });\n              _context.next = 4;\n              return axios.post(\"/user/getCartItems\");\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                cartItems = res.data.cartItems;\n                console.log({\n                  getCartItems: cartItems\n                });\n\n                if (cartItems) {\n                  dispatch({\n                    type: cartConstants.ADD_TO_CART_SUCCESS,\n                    payload: {\n                      cartItems: cartItems\n                    }\n                  });\n                }\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport var addToCart = function addToCart(product) {\n  var newQty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var _store$getState, cartItems, auth, qty, payload, res;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _store$getState = store.getState(), cartItems = _store$getState.cart.cartItems, auth = _store$getState.auth; //console.log('action::products', products);\n              //const product = action.payload.product;\n              //const products = state.products;\n\n              qty = cartItems[product._id] ? parseInt(cartItems[product._id].qty + newQty) : 1;\n              cartItems[product._id] = _objectSpread({}, product, {\n                qty: qty\n              });\n\n              if (!auth.authenticate) {\n                _context2.next = 14;\n                break;\n              }\n\n              dispatch({\n                type: cartConstants.ADD_TO_CART_REQUEST\n              });\n              payload = {\n                // cartItems: Object.keys(cartItems).map((key, index) => {\n                //     return {\n                //         quantity: cartItems[key].qty,\n                //         product: cartItems[key]._id\n                //     }\n                // })\n                cartItems: [{\n                  product: product._id,\n                  quantity: qty\n                }]\n              };\n              console.log(payload);\n              _context2.next = 9;\n              return axios.post(\"/user/cart/addtocart\", payload);\n\n            case 9:\n              res = _context2.sent;\n              console.log(res);\n\n              if (res.status === 201) {\n                dispatch(getCartItems());\n              }\n\n              _context2.next = 15;\n              break;\n\n            case 14:\n              localStorage.setItem(\"cart\", JSON.stringify(cartItems));\n\n            case 15:\n              console.log(\"addToCart::\", cartItems);\n              dispatch({\n                type: cartConstants.ADD_TO_CART_SUCCESS,\n                payload: {\n                  cartItems: cartItems\n                }\n              });\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var removeCartItem = function removeCartItem(payload) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res, error;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dispatch({\n                type: cartConstants.REMOVE_CART_ITEM_REQUEST\n              });\n              _context3.next = 4;\n              return axios.post(\"/user/cart/removeItem\", {\n                payload: payload\n              });\n\n            case 4:\n              res = _context3.sent;\n\n              if (res.status === 202) {\n                dispatch({\n                  type: cartConstants.REMOVE_CART_ITEM_SUCCESS\n                });\n                dispatch(getCartItems());\n              } else {\n                error = res.data.error;\n                dispatch({\n                  type: cartConstants.REMOVE_CART_ITEM_FAILURE,\n                  payload: {\n                    error: error\n                  }\n                });\n              }\n\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var updateCart = function updateCart() {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var _store$getState2, auth, cartItems, payload, res;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _store$getState2 = store.getState(), auth = _store$getState2.auth;\n              cartItems = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : null;\n              console.log(\"upppppppppp\");\n\n              if (!auth.authenticate) {\n                _context4.next = 17;\n                break;\n              }\n\n              localStorage.removeItem(\"cart\"); //dispatch(getCartItems());\n\n              if (!cartItems) {\n                _context4.next = 14;\n                break;\n              }\n\n              payload = {\n                cartItems: Object.keys(cartItems).map(function (key, index) {\n                  return {\n                    quantity: cartItems[key].qty,\n                    product: cartItems[key]._id\n                  };\n                })\n              };\n\n              if (!(Object.keys(cartItems).length > 0)) {\n                _context4.next = 12;\n                break;\n              }\n\n              _context4.next = 10;\n              return axios.post(\"/user/cart/addtocart\", payload);\n\n            case 10:\n              res = _context4.sent;\n\n              if (res.status === 201) {\n                dispatch(getCartItems());\n              }\n\n            case 12:\n              _context4.next = 15;\n              break;\n\n            case 14:\n              dispatch(getCartItems());\n\n            case 15:\n              _context4.next = 18;\n              break;\n\n            case 17:\n              if (cartItems) {\n                dispatch({\n                  type: cartConstants.ADD_TO_CART_SUCCESS,\n                  payload: {\n                    cartItems: cartItems\n                  }\n                });\n              }\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport { getCartItems };","map":{"version":3,"sources":["C:/Users/development/Desktop/josebek store/frontend-app/src/actions/cart.action.js"],"names":["axios","cartConstants","store","getCartItems","dispatch","type","ADD_TO_CART_REQUEST","post","res","status","cartItems","data","console","log","ADD_TO_CART_SUCCESS","payload","addToCart","product","newQty","getState","cart","auth","qty","_id","parseInt","authenticate","quantity","localStorage","setItem","JSON","stringify","removeCartItem","REMOVE_CART_ITEM_REQUEST","REMOVE_CART_ITEM_SUCCESS","error","REMOVE_CART_ITEM_FAILURE","updateCart","getItem","parse","removeItem","Object","keys","map","key","index","length"],"mappings":"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","sourcesContent":["import axios from \"../helpers/axios\";\r\nimport { cartConstants } from \"./constant\";\r\nimport store from \"../store\";\r\n\r\nconst getCartItems = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: cartConstants.ADD_TO_CART_REQUEST });\r\n      const res = await axios.post(`/user/getCartItems`);\r\n      if (res.status === 200) {\r\n        const { cartItems } = res.data;\r\n        console.log({ getCartItems: cartItems });\r\n        if (cartItems) {\r\n          dispatch({\r\n            type: cartConstants.ADD_TO_CART_SUCCESS,\r\n            payload: { cartItems },\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const addToCart = (product, newQty = 1) => {\r\n  return async (dispatch) => {\r\n    const {\r\n      cart: { cartItems },\r\n      auth,\r\n    } = store.getState();\r\n    //console.log('action::products', products);\r\n    //const product = action.payload.product;\r\n    //const products = state.products;\r\n    const qty = cartItems[product._id]\r\n      ? parseInt(cartItems[product._id].qty + newQty)\r\n      : 1;\r\n    cartItems[product._id] = {\r\n      ...product,\r\n      qty,\r\n    };\r\n\r\n    if (auth.authenticate) {\r\n      dispatch({ type: cartConstants.ADD_TO_CART_REQUEST });\r\n      const payload = {\r\n        // cartItems: Object.keys(cartItems).map((key, index) => {\r\n        //     return {\r\n        //         quantity: cartItems[key].qty,\r\n        //         product: cartItems[key]._id\r\n        //     }\r\n        // })\r\n        cartItems: [\r\n          {\r\n            product: product._id,\r\n            quantity: qty,\r\n          },\r\n        ],\r\n      };\r\n      console.log(payload);\r\n      const res = await axios.post(`/user/cart/addtocart`, payload);\r\n      console.log(res);\r\n      if (res.status === 201) {\r\n        dispatch(getCartItems());\r\n      }\r\n    } else {\r\n      localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n    }\r\n\r\n    console.log(\"addToCart::\", cartItems);\r\n\r\n    dispatch({\r\n      type: cartConstants.ADD_TO_CART_SUCCESS,\r\n      payload: { cartItems },\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeCartItem = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: cartConstants.REMOVE_CART_ITEM_REQUEST });\r\n      const res = await axios.post(`/user/cart/removeItem`, { payload });\r\n      if (res.status === 202) {\r\n        dispatch({ type: cartConstants.REMOVE_CART_ITEM_SUCCESS });\r\n        dispatch(getCartItems());\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: cartConstants.REMOVE_CART_ITEM_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateCart = () => {\r\n  return async (dispatch) => {\r\n    const { auth } = store.getState();\r\n    let cartItems = localStorage.getItem(\"cart\")\r\n      ? JSON.parse(localStorage.getItem(\"cart\"))\r\n      : null;\r\n\r\n    console.log(\"upppppppppp\");\r\n\r\n    if (auth.authenticate) {\r\n      localStorage.removeItem(\"cart\");\r\n      //dispatch(getCartItems());\r\n      if (cartItems) {\r\n        const payload = {\r\n          cartItems: Object.keys(cartItems).map((key, index) => {\r\n            return {\r\n              quantity: cartItems[key].qty,\r\n              product: cartItems[key]._id,\r\n            };\r\n          }),\r\n        };\r\n        if (Object.keys(cartItems).length > 0) {\r\n          const res = await axios.post(`/user/cart/addtocart`, payload);\r\n          if (res.status === 201) {\r\n            dispatch(getCartItems());\r\n          }\r\n        }\r\n      } else {\r\n        dispatch(getCartItems());\r\n      }\r\n    } else {\r\n      if (cartItems) {\r\n        dispatch({\r\n          type: cartConstants.ADD_TO_CART_SUCCESS,\r\n          payload: { cartItems },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport { getCartItems };"]},"metadata":{},"sourceType":"module"}