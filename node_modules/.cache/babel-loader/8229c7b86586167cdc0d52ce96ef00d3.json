{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { cartConstants } from \"./constant\";\nimport store from \"../store\";\nexport var addToCart = function addToCart(product) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var cartItems;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cartItems = store.getState().cart.cartItems; // console.log('action::products', products);\n              // const qty = cartItems[product._id] ? parseInt(cartItems[product._id].qty + 1) : products[product._id] = {\n              //     ...products,\n              //     qty\n              // };\n              // localStorage.setItem('cart', JSON.stringify(products));\n\n              dispatch({\n                type: cartConstants.ADD_TO_CART_REQUEST,\n                payload: {\n                  products: product\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/development/Desktop/josebek store/frontend-app/src/actions/cart.action.js"],"names":["cartConstants","store","addToCart","product","dispatch","cartItems","getState","cart","type","ADD_TO_CART_REQUEST","payload","products"],"mappings":";;AAAA,SAAQA,aAAR,QAA4B,YAA5B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAa;AAClC;AAAA,wEAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACIC,cAAAA,SADJ,GACiBJ,KAAK,CAACK,QAAN,GAAiBC,IADlC,CACIF,SADJ,EAEH;AAEA;AACA;AACA;AACA;AAEA;;AACAD,cAAAA,QAAQ,CAAC;AACLI,gBAAAA,IAAI,EAACR,aAAa,CAACS,mBADd;AAELC,gBAAAA,OAAO,EAAE;AAACC,kBAAAA,QAAQ,EAAGR;AAAZ;AAFJ,eAAD,CAAR;;AAVG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAiBH,CAlBM","sourcesContent":["import {cartConstants} from \"./constant\";\r\nimport store from \"../store\";\r\n\r\nexport const addToCart = (product) => {\r\n    return async dispatch => {\r\n        const {cartItems} = store.getState().cart;\r\n        // console.log('action::products', products);\r\n\r\n        // const qty = cartItems[product._id] ? parseInt(cartItems[product._id].qty + 1) : products[product._id] = {\r\n        //     ...products,\r\n        //     qty\r\n        // };\r\n\r\n        // localStorage.setItem('cart', JSON.stringify(products));\r\n        dispatch({\r\n            type:cartConstants.ADD_TO_CART_REQUEST,\r\n            payload: {products : product}\r\n        });\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}