{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { cartConstants } from './constant';\nimport store from '../store';\nimport axios from 'axios';\n\nvar getCartItems = function getCartItems() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, cartItems;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: cartConstants.ADD_TO_CART_REQUEST\n              });\n              _context.next = 4;\n              return axios.post(\"/user/getCartItems\");\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                cartItems = res.data.cartItems;\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport var addToCart = function addToCart(product) {\n  var newQty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var cartItems, qty;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              cartItems = store.getState().cart.cartItems; // console.log('action::products', products);\n\n              qty = cartItems[product._id] ? parseInt(cartItems[product._id].qty + newQty) : 1;\n              cartItems[product._id] = _objectSpread({}, product, {\n                qty: qty\n              });\n              localStorage.setItem('cart', JSON.stringify(cartItems));\n              dispatch({\n                type: cartConstants.ADD_TO_CART_REQUEST,\n                payload: {\n                  cartItems: cartItems\n                }\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var updateCart = function updateCart() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var cartItems;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              cartItems = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : null;\n\n              if (cartItems) {\n                dispatch({\n                  type: cartConstants.ADD_TO_CART_REQUEST,\n                  payload: {\n                    cartItems: cartItems\n                  }\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/development/Desktop/josebek store/frontend-app/src/actions/cart.action.js"],"names":["cartConstants","store","axios","getCartItems","dispatch","type","ADD_TO_CART_REQUEST","post","res","status","cartItems","data","console","log","addToCart","product","newQty","getState","cart","qty","_id","parseInt","localStorage","setItem","JSON","stringify","payload","updateCart","getItem","parse"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,YAA9B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC1B;AAAA,wEAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELA,cAAAA,QAAQ,CAAC;AACRC,gBAAAA,IAAI,EAAEL,aAAa,CAACM;AADZ,eAAD,CAAR;AAFK;AAAA,qBAKaJ,KAAK,CAACK,IAAN,sBALb;;AAAA;AAKCC,cAAAA,GALD;;AAML,kBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AAChBC,gBAAAA,SADgB,GACHF,GAAG,CAACG,IADD,CAChBD,SADgB;AAGvB;;AATI;AAAA;;AAAA;AAAA;AAAA;AAWLE,cAAAA,OAAO,CAACC,GAAR;;AAXK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAcA,CAfD;;AAqBA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAuB;AAAA,MAAbC,MAAa,uEAAN,CAAM;AAC/C;AAAA,yEAAO,kBAAOZ,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACEM,cAAAA,SADF,GACgBT,KAAK,CAACgB,QAAN,GAAiBC,IADjC,CACER,SADF,EAEN;;AAEMS,cAAAA,GAJA,GAIMT,SAAS,CAACK,OAAO,CAACK,GAAT,CAAT,GACTC,QAAQ,CAACX,SAAS,CAACK,OAAO,CAACK,GAAT,CAAT,CAAuBD,GAAvB,GAA4BH,MAA7B,CADC,GAET,CANG;AAONN,cAAAA,SAAS,CAACK,OAAO,CAACK,GAAT,CAAT,qBACIL,OADJ;AAECI,gBAAAA,GAAG,EAAHA;AAFD;AAKAG,cAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAef,SAAf,CAA7B;AACAN,cAAAA,QAAQ,CAAC;AACRC,gBAAAA,IAAI,EAAEL,aAAa,CAACM,mBADZ;AAERoB,gBAAAA,OAAO,EAAE;AAAEhB,kBAAAA,SAAS,EAATA;AAAF;AAFD,eAAD,CAAR;;AAbM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAkBA,CAnBM;AAsBP,OAAO,IAAMiB,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC/B;AAAA,yEAAO,kBAAOvB,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACAM,cAAAA,SADA,GACYY,YAAY,CAACM,OAAb,CAAqB,MAArB,IACfJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACM,OAAb,CAAqB,MAArB,CAAX,CADe,GAEf,IAHG;;AAKN,kBAAIlB,SAAJ,EAAe;AACdN,gBAAAA,QAAQ,CAAC;AACRC,kBAAAA,IAAI,EAAEL,aAAa,CAACM,mBADZ;AAERoB,kBAAAA,OAAO,EAAE;AAAEhB,oBAAAA,SAAS,EAATA;AAAF;AAFD,iBAAD,CAAR;AAIA;;AAVK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAYA,CAbM","sourcesContent":["import { cartConstants } from './constant';\r\nimport store from '../store';\r\nimport axios from 'axios';\r\n\r\nconst getCartItems = () => {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: cartConstants.ADD_TO_CART_REQUEST\r\n\t\t\t});\r\n\t\t\tconst res = await axios.post(`/user/getCartItems`);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst {cartItems} = res.data;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const addToCart = (product, newQty=1) => {\r\n\treturn async (dispatch) => {\r\n\t\tconst { cartItems } = store.getState().cart;\r\n\t\t// console.log('action::products', products);\r\n\r\n\t\tconst qty = cartItems[product._id]\r\n\t\t\t? parseInt(cartItems[product._id].qty +newQty)\r\n\t\t\t: 1;\r\n\t\tcartItems[product._id] = {\r\n\t\t\t...product,\r\n\t\t\tqty,\r\n\t\t};\r\n\r\n\t\tlocalStorage.setItem('cart', JSON.stringify(cartItems));\r\n\t\tdispatch({\r\n\t\t\ttype: cartConstants.ADD_TO_CART_REQUEST,\r\n\t\t\tpayload: { cartItems },\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const updateCart = () => {\r\n\treturn async (dispatch) => {\r\n\t\tconst cartItems = localStorage.getItem('cart')\r\n\t\t\t? JSON.parse(localStorage.getItem('cart'))\r\n\t\t\t: null;\r\n\r\n\t\tif (cartItems) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: cartConstants.ADD_TO_CART_REQUEST,\r\n\t\t\t\tpayload: { cartItems },\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};"]},"metadata":{},"sourceType":"module"}