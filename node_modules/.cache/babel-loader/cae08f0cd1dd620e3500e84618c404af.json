{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { cartConstants } from './constant';\nimport store from '../store';\nexport var addToCart = function addToCart(product) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var cartItems;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cartItems = store.getState().cart.cartItems; // console.log('action::products', products);\n              // const qty = cartItems[product._id] ? parseInt(cartItems[product._id].qty + 1) : products[product._id] = {\n              //     ...products,\n              //     qty\n              // };\n              // localStorage.setItem('cart', JSON.stringify(products));\n\n              dispatch({\n                type: cartConstants.ADD_TO_CART_REQUEST,\n                payload: {\n                  cartItems: {\n                    product: product\n                  }\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/development/Desktop/josebek store/frontend-app/src/actions/cart.action.js"],"names":["cartConstants","store","addToCart","product","dispatch","cartItems","getState","cart","type","ADD_TO_CART_REQUEST","payload"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,YAA9B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAa;AACrC;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,SADF,GACgBJ,KAAK,CAACK,QAAN,GAAiBC,IADjC,CACEF,SADF,EAEN;AAEA;AACA;AACA;AACA;AAEA;;AACAD,cAAAA,QAAQ,CAAC;AACRI,gBAAAA,IAAI,EAAER,aAAa,CAACS,mBADZ;AAERC,gBAAAA,OAAO,EAAE;AAAEL,kBAAAA,SAAS,EAAE;AAAEF,oBAAAA,OAAO,EAAPA;AAAF;AAAb;AAFD,eAAD,CAAR;;AAVM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAeA,CAhBM","sourcesContent":["import { cartConstants } from './constant';\r\nimport store from '../store';\r\n\r\nexport const addToCart = (product) => {\r\n\treturn async (dispatch) => {\r\n\t\tconst { cartItems } = store.getState().cart;\r\n\t\t// console.log('action::products', products);\r\n\r\n\t\t// const qty = cartItems[product._id] ? parseInt(cartItems[product._id].qty + 1) : products[product._id] = {\r\n\t\t//     ...products,\r\n\t\t//     qty\r\n\t\t// };\r\n\r\n\t\t// localStorage.setItem('cart', JSON.stringify(products));\r\n\t\tdispatch({\r\n\t\t\ttype: cartConstants.ADD_TO_CART_REQUEST,\r\n\t\t\tpayload: { cartItems: { product } },\r\n\t\t});\r\n\t};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}