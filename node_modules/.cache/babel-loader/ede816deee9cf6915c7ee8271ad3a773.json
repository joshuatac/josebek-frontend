{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\development\\\\Desktop\\\\josebek store\\\\frontend-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from '../helpers/axios';\nimport { productConstants } from './constant';\nexport var getProductsBySlug = function getProductsBySlug(slug) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"products/\".concat(slug));\n\n            case 2:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                dispatch({\n                  type: productConstants.GET_PRODUCTS_BY_SLUG,\n                  payload: res.data\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getProductPage = function getProductPage(payload) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var _payload$params, cid, type, res, page, _error;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _payload$params = payload.params, cid = _payload$params.cid, type = _payload$params.type;\n              _context2.next = 4;\n              return axios.get(\"/page/\".concat(cid, \"/\").concat(type));\n\n            case 4:\n              res = _context2.sent;\n              dispatch({\n                type: productConstants.GET_PRODUCT_PAGE_REQUEST\n              });\n\n              if (res.status === 200) {\n                page = res.data.page;\n                dispatch({\n                  type: productConstants.GET_PRODUCT_PAGE_SUCCESS,\n                  payload: {\n                    type: type\n                  }\n                });\n              } else {\n                _error = res.data.error;\n                dispatch({\n                  type: productConstants.GET_PRODUCT_PAGE_FAILURE,\n                  payload: {\n                    error: _error\n                  }\n                });\n              }\n\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(error);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/development/Desktop/josebek store/frontend-app/src/actions/product.action.js"],"names":["axios","productConstants","getProductsBySlug","slug","dispatch","get","res","status","type","GET_PRODUCTS_BY_SLUG","payload","data","getProductPage","params","cid","GET_PRODUCT_PAGE_REQUEST","page","GET_PRODUCT_PAGE_SUCCESS","error","GET_PRODUCT_PAGE_FAILURE","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD,EAAU;AAC1C;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACYJ,KAAK,CAACK,GAAN,oBAAsBF,IAAtB,EADZ;;AAAA;AACAG,cAAAA,GADA;;AAEN,kBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACvBH,gBAAAA,QAAQ,CAAC;AACRI,kBAAAA,IAAI,EAAEP,gBAAgB,CAACQ,oBADf;AAERC,kBAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFL,iBAAD,CAAR;AAIA;;AAPK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AASA,CAVM;AAYP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACF,OAAD,EAAa;AAC1C;AAAA,yEAAO,kBAAON,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAI0BM,OAAO,CAACG,MAJlC,EAIYC,GAJZ,mBAIYA,GAJZ,EAIiBN,IAJjB,mBAIiBA,IAJjB;AAAA;AAAA,qBAKsBR,KAAK,CAACK,GAAN,iBAAmBS,GAAnB,cAA0BN,IAA1B,EALtB;;AAAA;AAKUF,cAAAA,GALV;AAMIF,cAAAA,QAAQ,CAAC;AACLI,gBAAAA,IAAI,EAAEP,gBAAgB,CAACc;AADlB,eAAD,CAAR;;AAIA,kBAAIT,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACZS,gBAAAA,IADY,GACHV,GAAG,CAACK,IADD,CACZK,IADY;AAEpBZ,gBAAAA,QAAQ,CAAC;AACLI,kBAAAA,IAAI,EAAEP,gBAAgB,CAACgB,wBADlB;AAELP,kBAAAA,OAAO,EAAE;AAAEF,oBAAAA,IAAI,EAAJA;AAAF;AAFJ,iBAAD,CAAR;AAIH,eAND,MAMO;AACKU,gBAAAA,MADL,GACeZ,GAAG,CAACK,IADnB,CACKO,KADL;AAEHd,gBAAAA,QAAQ,CAAC;AACLI,kBAAAA,IAAI,EAAEP,gBAAgB,CAACkB,wBADlB;AAELT,kBAAAA,OAAO,EAAE;AAAEQ,oBAAAA,KAAK,EAALA;AAAF;AAFJ,iBAAD,CAAR;AAIH;;AAtBL;AAAA;;AAAA;AAAA;AAAA;AAwBIE,cAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AA6BA,CA9BM","sourcesContent":["import axios from '../helpers/axios';\r\nimport { productConstants } from './constant';\r\n\r\nexport const getProductsBySlug = (slug) => {\r\n\treturn async (dispatch) => {\r\n\t\tconst res = await axios.get(`products/${slug}`);\r\n\t\tif (res.status === 200) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: productConstants.GET_PRODUCTS_BY_SLUG,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const getProductPage = (payload) => {\r\n\treturn async (dispatch) => {\r\n\r\n\r\n        try{\r\n            const { cid, type } = payload.params;\r\n            const res = await axios.get(`/page/${cid}/${type}`);\r\n            dispatch({\r\n                type: productConstants.GET_PRODUCT_PAGE_REQUEST,\r\n    \r\n            })\r\n            if (res.status === 200) {\r\n                const { page } = res.data;\r\n                dispatch({\r\n                    type: productConstants.GET_PRODUCT_PAGE_SUCCESS,\r\n                    payload: { type },\r\n                });\r\n            } else {\r\n                const { error } = res.data;\r\n                dispatch({\r\n                    type: productConstants.GET_PRODUCT_PAGE_FAILURE,\r\n                    payload: { error },\r\n                });\r\n            }\r\n        }catch {\r\n            console.log(error)\r\n        }\r\n\r\n\t\t\r\n\t};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}